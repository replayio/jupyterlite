name: UI Tests
on: 
  schedule:
    - cron: '0 0 * * *'
  push:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build dist
        uses: ./.github/actions/build-dist

      - name: Install JupyterLite
        run: |
          python3 -m pip install entrypoints doit jupyter_core jupyterlab~=3.2
          python3 -m pip install --find-links dist --no-index jupyterlite

      - name: Build JupyterLite
        run: |
          cd ui-tests
          # Build the JupyterLite website
          yarn build

      - name: Upload the JupyterLite website
        uses: actions/upload-artifact@v2
        with:
          name: jupyterlite-ui-tests-app-${{ github.run_number }}
          path: ./ui-tests/ui-tests-app

  ui-tests:
    needs: [build]
    name: Visual Regression
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [firefox, chromium]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: jupyterlite-ui-tests-app-${{ github.run_number }}
          path: ./ui-tests/ui-tests-app

      - name: Cache (ui-tests/node_modules)
        uses: actions/cache@v2
        id: cache-ui-tests-node-modules
        with:
          path: ui-tests/node_modules/
          key: |
            ${{ env.CACHE_EPOCH }}-${{ runner.os }}-node-modules-${{ hashFiles('ui-tests/yarn.lock') }}

      - name: Install dependencies and browser
        run: |
          cd ui-tests
          yarn --frozen-lockfile
          yarn playwright install

      - name: Start JupyterLite
        run: |
          cd ui-tests
          # Serve the website
          yarn start:detached

      - name: Wait for JupyterLite
        uses: ifaxity/wait-on-action@v1
        with:
          resource: http-get://127.0.0.1:8000/
          timeout: 360000

      - name: Test
        run: |
          cd ui-tests
          yarn run test --browser ${{ matrix.browser }}
